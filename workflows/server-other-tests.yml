# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Server Other Tests

on: pull_request

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Fails with 10.x, 12.x
        # node-version: [8.x]
        node-version: [8.10.0]
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2
    - name: Cache yarn modules
      uses: actions/cache@v1
      env:
        cache-name: cache-yarn-install
      with:
        path: ~/.yarn
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: yarn install
    - run: yarn test:coverage tests/server/helpers  $JEST_COMMON_OPTIONS
    - run: yarn test:coverage tests/server/middleware  $JEST_COMMON_OPTIONS
    - run: yarn test:coverage tests/server/query  $JEST_COMMON_OPTIONS
    - run: yarn test:coverage tests/server/Repository  $JEST_COMMON_OPTIONS
    - run: yarn test:coverage tests/server/serializer  $JEST_COMMON_OPTIONS
    - run: yarn test:coverage tests/server/service  $JEST_COMMON_OPTIONS
    - run: node_modules/.bin/codecov --token=${{ secrets.CODECOV_TOKEN }}
env:
  CI: true
  JEST_COMMON_OPTIONS: --silent --maxWorkers=2 --logHeapUsage
  NODE_OPTIONS: "--max-old-space-size=2048"
  NODE_ENV: test
  YARN_CACHE_FOLDER: "~/.yarn"
